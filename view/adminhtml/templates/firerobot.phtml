<?php
/** @var \Scaleflex\FileRobot\Block\Adminhtml\FireRobot $block */
?>
<link rel="stylesheet" type="text/css"
      href="https://cdn.scaleflex.it/plugins/filerobot-widget/1.0.105/filerobot-widget.min.css?func=proxy"/>
<script type="text/javascript"
        src="https://cdn.scaleflex.it/plugins/filerobot-widget/1.0.105/filerobot-widget.min.js?func=proxy"></script>

<button style="display: none" id="file-robot-modal-btn"></button>
<div id="modal-content">
    <div id="filerobot-widget"></div>
</div>
<script type="text/javascript">
    require(["jquery", "Magento_Ui/js/modal/modal"], function (jQuery, modal, _) {
        const container  = '<?php echo $block->getConfig()->getToken(); ?>';
        const templateId = '<?php echo $block->getConfig()->getTemplateId(); ?>';
        const uploadDir  = '<?php echo $block->getConfig()->getUploadDir(); ?>';

        var options = {
            type: 'popup',
            responsive: true,
            title: '',
            buttons: []
        };

        const Filerobot = window.Filerobot;


        var popup = modal(options, jQuery('#modal-content'));

        if (container && templateId) {
            const filerobot = Filerobot.Core({
                securityTemplateID: templateId,
                container: container
            });

            const Explorer = Filerobot.Explorer;
            const XHRUpload = Filerobot.XHRUpload;
            const ImageEditor = Filerobot.ImageEditor;
            const Webcam = Filerobot.Webcam;

            filerobot
                .use(Explorer, {
                    config: {
                        rootFolderPath: uploadDir ?? '/'
                    },
                    target: '#filerobot-widget',
                    inline: true,
                    width: '100%',
                    height: 530,
                    showDetailsView: true,
                    locale: {
                        strings: {
                            export: 'Insert'
                        }
                    },
                })
                .use(XHRUpload)
                .use(ImageEditor, {
                    cloudimageToken: templateId
                })
                .use(Webcam)
                .on('export', function (files, popupExportSuccessMsgFn, downloadFilesPackagedFn, downloadFileFn) {
                    files.forEach((selected, key) => {
                        let link = selected.link;

                        if (!link.includes('width=')) {
                            link += ('&width=' + selected.file.info.img_w);
                        }

                        if (!link.includes('height=')) {
                            link += ('&height=' + selected.file.info.img_h);
                        }

                        window.fileRobotActiveEditor.execCommand('mceInsertContent', false, '<div>' +
                            '<img src="' + link + '" ' +
                            ' width="'+selected.file.info.img_w+'"' +
                            ' height="'+selected.file.info.img_h+'"' +
                            ' alt="' + selected.file.name + '" /> ' +
                            '</div>');
                    })
                    window.fileRobotActiveEditor = undefined
                    jQuery('#modal-content').modal('closeModal')
                    files = []
                    return false
                });
        }

        jQuery("#file-robot-modal-btn").click(function () {
            jQuery('#modal-content').modal('openModal');
        });
    });
</script>
